<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="springboot.mapper.EmailMapper">
  <resultMap id="BaseResultMap" type="springboot.entity.Email">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="receive_address" jdbcType="VARCHAR" property="receiveAddress" />
    <result column="send_address" jdbcType="VARCHAR" property="sendAddress" />
    <result column="send_date" jdbcType="TIMESTAMP" property="sendDate" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="title" jdbcType="VARCHAR" property="title" />
  </resultMap>
  <sql id="Base_Column_List">
    id, content, create_date, receive_address, send_address, send_date, state, title
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from email
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from email
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="springboot.entity.Email">
    insert into email (id, content, create_date, 
      receive_address, send_address, send_date, 
      state, title)
    values (#{id,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{receiveAddress,jdbcType=VARCHAR}, #{sendAddress,jdbcType=VARCHAR}, #{sendDate,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="springboot.entity.Email">
    insert into email
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="receiveAddress != null">
        receive_address,
      </if>
      <if test="sendAddress != null">
        send_address,
      </if>
      <if test="sendDate != null">
        send_date,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="title != null">
        title,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveAddress != null">
        #{receiveAddress,jdbcType=VARCHAR},
      </if>
      <if test="sendAddress != null">
        #{sendAddress,jdbcType=VARCHAR},
      </if>
      <if test="sendDate != null">
        #{sendDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="springboot.entity.Email">
    update email
    <set>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveAddress != null">
        receive_address = #{receiveAddress,jdbcType=VARCHAR},
      </if>
      <if test="sendAddress != null">
        send_address = #{sendAddress,jdbcType=VARCHAR},
      </if>
      <if test="sendDate != null">
        send_date = #{sendDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="springboot.entity.Email">
    update email
    set content = #{content,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      receive_address = #{receiveAddress,jdbcType=VARCHAR},
      send_address = #{sendAddress,jdbcType=VARCHAR},
      send_date = #{sendDate,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>