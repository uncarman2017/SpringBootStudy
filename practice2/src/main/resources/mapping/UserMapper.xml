<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="springboot.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="springboot.entity.User">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="is_delete" jdbcType="BIT" property="isDelete" />
    <result column="last_login_date" jdbcType="TIMESTAMP" property="lastLoginDate" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />

    <collection property="roleList" column="id" javaType="java.util.List" ofType="springboot.entity.Role" select="springboot.mapper.RoleMapper.findRolesByUserId">
      <id column="id" jdbcType="VARCHAR" property="id" />
      <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    id, create_date, email, is_delete, last_login_date, name, password, phone
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="springboot.entity.User">
    insert into user (id, create_date, email, 
      is_delete, last_login_date, name, 
      password, phone)
    values (#{id,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{email,jdbcType=VARCHAR}, 
      #{isDelete,jdbcType=BIT}, #{lastLoginDate,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="springboot.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="lastLoginDate != null">
        last_login_date,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="phone != null">
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="lastLoginDate != null">
        #{lastLoginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="springboot.entity.User">
    update user
    <set>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="lastLoginDate != null">
        last_login_date = #{lastLoginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="springboot.entity.User">
    update user
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      email = #{email,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=BIT},
      last_login_date = #{lastLoginDate,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>